<idea-plugin>
    <id>org.mooselab.logging-observer</id>
    <name>Logging Observer</name>
    <version>1.0</version>
    <vendor email="moose.researchlab@gmail.com" url="https://www.hengli.org/research/">MOOSE Lab</vendor>

    <description><![CDATA[
    <p>Logging Observer is an IntelliJ-based IDEA plugin for searching and analyzing logging code in Java projects.</p>

    <h2>What does Logging Observer provide?</h2>
    <ul>
    <li>Searching logging-related elements in a Java project.<br>
    <ul>
    <li>Searching all logging statements in the project.</li>
    <li>Searching all exception logging statements (logging statements in catch blocks).</li>
    <li>etc.</li>
    </ul>
    </li>
    <li>Analyzing logging code.<br>
    <ul>
    <li>Analyzing logging components (e.g., log level, text, variables, stack traces)</li>
    <li>Analyzing logging-related code metrics (e.g., exception type, containing code blocks)</li>
    <li>etc.</li>
    </ul>
    </li>
    <li>More to come ...</li>
    </ul>

    <h2>How to use Logging Observer?</h2>
    <h3>Perform actions</h3>
    <p>The features of the plugin are packaged into a menu item <em>Search & Analyze Logging</em> under the <em>Tools</em> menu.
    There are currnetly four <em>actions</em> in the menu item.
    You can click each <em>action</em> to perform the corresponding operation.</p>

    <h3>View search results</h3>
    <p>After performing an action (e.g, <em>Search & Analyze All Logs</em>),
    there will be a few seconds to a few minutes of waiting time depending on the size of the project and the performed action,
    then the search results will be displayed in the <em>Find</em> tool window usually in the lower left part of IntelliJ's UI.</p>

    <p>You can browse and click a searched item.
    When a searched item is clicked,
    the source file containing the searched item will be displayed with the searched item highlighted in the file.</p>

    <h3>View analysis results</h3>
    <p>The analysis results are stored in the form of IntelliJ's log files. You can access the log files through the <em>Show Log in Finder</em> action in the <em>Help</em> menu.</p>

    <p>In the current version, when you perform action <em>Search & Analyze All Logs</em>, the analysis results will show a list of logging statements.
    For each logging statement, the results will include its source code location, the logging statement itself, and its components (log level and message string).
    The results start after the log message <em>Logging components for project ...</em>. </p>

    <p>When you perform action <em>Search & Analyze Exception Logs</em>, the analysis results will show a list of exception logging statements.
    For each exception logging statement, the results will include a list of context code metrics associated with the logging statement (e.g., exception type, containing package, etc.).
    The results start after the log message <em>Exception logging metrics for project...</em>.</p>

    ]]></description>

    <change-notes>Initial release</change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->
    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
    </extensions>

    <application-components>
        <!-- Add your application components here -->
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <actions>
        <!-- Add your actions here -->
        <!--
        <group id="LoggingPlugin.SearchLogging" text="SearchLogging" description="Logging search options">
            <add-to-group group-id="MainMenu" anchor="last"/>
            <action id="LogPlugin.SearchLogging" class="obsolete.searchlogging.SearchLoggingUsages" text="Search All Logging Statements" description="Search all logging statements"/>
            <action id="LogPlugin.SampleLogging" class="obsolete.searchlogging.SampleLoggingUsages" text="Sample 100 Logging Statements" description="Sample 100 logging statements"/>
            <action id="LogPlugin.SearchExceptionLogging" class="obsolete.searchlogging.SearchExceptionLogging" text="Search Exception Logging" description="Search all exception logging statements"/>
        </group>
        -->

        <group id="LoggingPlugin.LogSearch" text="Search &amp;&amp; Analyze Logging"
               description="Search and analyze log-related elements" popup="true">
            <!--<add-to-group group-id="MainMenu" anchor="last"/>-->

            <action id="LoggingPlugin.FindAllLogs" class="findelements.FindLoggingStatements"
                    text="Search &amp;&amp; Analyze All Logs"
                    description="Find all the logging statements and analyze their components">
                <!--<add-to-group group-id="LoggingPlugin.LogSearch"/>-->
            </action>
            <action id="LoggingPlugin.FindLoggingInCatchBlocks" class="findelements.FindLoggingStatementsInCatchSections"
                    text="Search &amp;&amp; Analyze Exception Logs"
                    description="Find logging statements in catch blocks and analyze their context metrics">
                <!--<add-to-group group-id="LoggingPlugin.LogSearch"/>-->
            </action>
            <action id="LoggingPlugin.FindCatchBlocks" class="findelements.FindJavaCatchSections"
                    text="Find Catch/Exception Blocks" description="Find all Java catch/exception blocks">
                <!--<add-to-group group-id="LoggingPlugin.LogSearch"/>-->
            </action>
            <action id="LoggingPlugin.FindJavaSources" class="findelements.FindJavaSourceFiles"
                    text="Find Java Source Files" description="Find all Java source files">
                <!--<add-to-group group-id="LoggingPlugin.LogSearch"/>-->
            </action>

            <add-to-group group-id="ToolsMenu" anchor="first"/>
        </group>

    </actions>
</idea-plugin>
